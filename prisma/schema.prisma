// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Store {
  id        String   @id @default(uuid()) @map("_id")
  name      String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders      Order[]
  collections Collection[]
  categories  Category[]
  products    Product[]
}

model Collection {
  id          String @id @unique @default(uuid()) @map("_id")
  storeId     String
  title       String
  description String
  imageUrl    String
  productUrl  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  store     Store    @relation(fields: [storeId], references: [id])
}

model Category {
  id        String   @id @unique @default(uuid()) @map("_id")
  storeId   String
  name      String
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
  store    Store     @relation(fields: [storeId], references: [id])
}

model Product {
  id          String   @id @default(uuid()) @map("_id")
  storeId     String
  categoryId  String
  name        String
  price       Float
  description String
  details     String[]
  isFeatured  Boolean  @default(false)
  isArchived  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orderItems OrderItem[]
  images     Image[]
  store      Store       @relation(fields: [storeId], references: [id])
  category   Category    @relation(fields: [categoryId], references: [id])
}

model Image {
  id        String   @id @default(uuid()) @map("_id")
  productId String
  createdAt DateTime @default(now())
  url       String
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Order {
  id         String      @id @unique
  storeId    String
  isPaid     Boolean     @default(false)
  firstName  String      @default("")
  lastName   String      @default("")
  email      String      @default("")
  phone      String      @default("")
  address    String      @default("")
  city       String      @default("")
  country    String      @default("")
  postalCode String      @default("")
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  orderItems OrderItem[]
  store      Store       @relation(fields: [storeId], references: [id], onDelete: Cascade)
}

model OrderItem {
  id        String @id @default(uuid()) @map("_id")
  orderId   String
  productId String
  quantity  Int

  product Product @relation(fields: [productId], references: [id])
  order   Order   @relation(fields: [orderId], references: [id])
}
